; forbid dune from building things in `target/` and `vendor/`

(data_only_dirs "target" "vendor")

; creates the rust library if any rust file changes

(rule
 (targets librand.a dllrand.so)
 (deps
  (source_tree .)
  (source_tree vendor))
 (action
  (progn
   ; this is to circumvent a dumb limitation of dune
   ; which prevents us from copying any .folder to _build
   (run mkdir -p .cargo)
   (run cp cargo-config.toml .cargo/config.toml)
   ; cargo build
   (run cargo build --release --offline --locked)
   ; extract the produced static library
   ; the .so fluff is here to remove errors that we sometimes get from dune
   (run
    sh
    -c
    "mv target/release/librand.so ./dllrand.so 2> /dev/null || mv target/release/librand.dylib ./dllrand.so 2> /dev/null || touch dllrand.so")
   (run cp target/release/librand.a .))))

; the FFI OCaml lib

(library
 (name rand)
 (public_name randoml.rand)
 (flags :standard -cclib -pthread)
 (foreign_archives rand))
